import { Directive, Host, Optional, Input } from '@angular/core';
import { GaEventDirective } from './ga-event.directive';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ga-event.directive';
export class GaEventFormInputDirective {
    constructor(gaEvent) {
        this.gaEvent = gaEvent;
        this.gaBind = 'focus';
    }
    set gaBind(bind) {
        if (this.gaEvent) {
            this.gaEvent.gaBind = bind;
        }
    }
}
GaEventFormInputDirective.ɵfac = function GaEventFormInputDirective_Factory(t) { return new (t || GaEventFormInputDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GaEventDirective, 9)); };
GaEventFormInputDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: GaEventFormInputDirective, selectors: [["input", "gaEvent", ""], ["select", "gaEvent", ""], ["textarea", "gaEvent", ""]], inputs: { gaBind: "gaBind" } });
GaEventFormInputDirective.ctorParameters = () => [
    { type: GaEventDirective, decorators: [{ type: Host }, { type: Optional }] }
];
GaEventFormInputDirective.propDecorators = {
    gaBind: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(GaEventFormInputDirective, [{
        type: Directive,
        args: [{
                selector: `input[gaEvent],
             select[gaEvent],
             textarea[gaEvent]`
            }]
    }], function () { return [{ type: ɵngcc1.GaEventDirective, decorators: [{
                type: Host
            }, {
                type: Optional
            }] }]; }, { gaBind: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2EtZXZlbnQtZm9ybS1pbnB1dC5kaXJlY3RpdmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1nb29nbGUtYW5hbHl0aWNzL3NyYy9saWIvZGlyZWN0aXZlcy9nYS1ldmVudC1mb3JtLWlucHV0LmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7QUFPeEQsTUFBTSxPQUFPLHlCQUF5QjtBQUN0QyxJQUNFLFlBQ2dDLE9BQXlCO0FBQ3hELFFBRCtCLFlBQU8sR0FBUCxPQUFPLENBQWtCO0FBQzNELFFBQ0ksSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7QUFDMUIsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFhLE1BQU0sQ0FBQyxJQUFZO0FBQ2xDLFFBQUksSUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ3RCLFlBQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO0FBQ2pDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSDtxREFsQkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSw4RUFFbUI7UUFDOUIsb05BQ0k7QUFBQztBQUdOLFlBVlMsZ0JBQWdCLHVCQVVwQixJQUFJLFlBQUksUUFBUTtBQUFNO0FBQUc7QUFFckIscUJBR04sS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBIb3N0LCBPcHRpb25hbCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEdhRXZlbnREaXJlY3RpdmUgfSBmcm9tICcuL2dhLWV2ZW50LmRpcmVjdGl2ZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogYGlucHV0W2dhRXZlbnRdLFxuICAgICAgICAgICAgIHNlbGVjdFtnYUV2ZW50XSxcbiAgICAgICAgICAgICB0ZXh0YXJlYVtnYUV2ZW50XWBcbn0pXG5leHBvcnQgY2xhc3MgR2FFdmVudEZvcm1JbnB1dERpcmVjdGl2ZSB7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEhvc3QoKSBAT3B0aW9uYWwoKSBwcm90ZWN0ZWQgZ2FFdmVudDogR2FFdmVudERpcmVjdGl2ZVxuICApIHtcbiAgICB0aGlzLmdhQmluZCA9ICdmb2N1cyc7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgZ2FCaW5kKGJpbmQ6IHN0cmluZykge1xuICAgIGlmICh0aGlzLmdhRXZlbnQpIHtcbiAgICAgIHRoaXMuZ2FFdmVudC5nYUJpbmQgPSBiaW5kO1xuICAgIH1cbiAgfVxuXG59XG4iXX0=